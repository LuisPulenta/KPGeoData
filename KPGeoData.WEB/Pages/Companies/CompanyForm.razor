@inject SweetAlertService swal

<NavigationLock OnBeforeInternalNavigation="OnBeforeInternalNavigation"></NavigationLock>

<EditForm EditContext="editContext" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator />

    <div class="mb-3">
        <label>Empresa:</label>
        <div>
            <InputText class="form-control" @bind-Value="@Company.Name" />
            <ValidationMessage For="@(() => Company.Name)" />
        </div>
    </div>

    <div class="mb-3">
        <label>Domicilio:</label>
        <div>
            <InputText class="form-control" @bind-Value="@Company.Address" />
            <ValidationMessage For="@(() => Company.Address)" />
        </div>
    </div>

    <div class="mb-3">
        <label>Teléfono:</label>
        <div>
            <InputText class="form-control" @bind-Value="@Company.Phone" />
            <ValidationMessage For="@(() => Company.Phone)" />
        </div>
    </div>

    <div class="mb-3">
        <label>CUIT:</label>
        <div>
            <InputText class="form-control" @bind-Value="@Company.CUIT" />
            <ValidationMessage For="@(() => Company.CUIT)" />
        </div>
    </div>

    <div class="mb-3">
        <label>EMail:</label>
        <div>
            <InputText class="form-control" @bind-Value="@Company.EMail" />
            <ValidationMessage For="@(() => Company.EMail)" />
        </div>
    </div>

    <div class="mb-3">
        <label>Contacto:</label>
        <div>
            <InputText class="form-control" @bind-Value="@Company.Contact" />
            <ValidationMessage For="@(() => Company.Contact)" />
        </div>
    </div>

    <div class="mb-3">
        <label>Activo:</label>
        <div>
            <input type="checkbox" @bind="@Company.Active">
        </div>
    </div>

    <button class="btn btn-primary btn-sm" type="submit">Guardar Cambios</button>
    <button class="btn btn-success btn-sm" @onclick="ReturnAction">Regresar</button>
</EditForm>

@code {
    private EditContext editContext = null!;

    protected override void OnInitialized()
    {
        editContext = new(Company);
    }

    [EditorRequired]
    [Parameter]
    public Company Company { get; set; } = null!;

    [EditorRequired]
    [Parameter]
    public EventCallback OnValidSubmit { get; set; }

    [EditorRequired]
    [Parameter]
    public EventCallback ReturnAction { get; set; }

    public bool FormPostedSuccessfully { get; set; } = false;

    private async Task OnBeforeInternalNavigation(LocationChangingContext context)
    {
        var formWasEdited = editContext.IsModified();

        if (!formWasEdited)
        {
            return;
        }

        if (FormPostedSuccessfully)
        {
            return;
        }

        var result = await swal.FireAsync(new SweetAlertOptions
            {
                Title = "Confirmación",
                Text = "¿Deseas abandonar la página y perder los cambios?",
                Icon = SweetAlertIcon.Question,
                ShowCancelButton = true,
                CancelButtonText = "No",
                ConfirmButtonText = "Si"
            });

        var confirm = !string.IsNullOrEmpty(result.Value);

        if (confirm)
        {
            return;
        }

        context.PreventNavigation();
    }
}